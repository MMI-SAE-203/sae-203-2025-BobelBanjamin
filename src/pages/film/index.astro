---
import { allFilms } from "../../../backend.mjs";
import FilmCard from "../../components/FilmCard.astro";
import Layout from '../../layouts/Layout.astro';
import '../../styles/global.css'
import { Image } from 'astro:assets';
import titre from "../assets/img/film.webp";;
import { addFilm } from "../../../backend.mjs";


const films = await allFilms();
const uniqueGenres = [...new Set(films.flatMap((film) => film.genre))];
---

<Layout>



<section class="py-12 bg-[#190A35] text-white">
    <h1 class="text-center text-4xl font-bold mb-10">Tous les Films</h1>

    <!-- Barre de filtrage -->
    <div class="flex justify-center mb-6">
        <label for="genreFilter" class="sr-only">Filtrer par Genre</label>
        <select id="genreFilter" class="p-3 rounded bg-gray-800 text-white">
            <option value="">Tous les genres</option>
            {uniqueGenres.map((genre) => (
                <option value={genre}>{genre}</option>
            ))}
        </select>
    </div>

    <!-- Grille des films -->
    <div id="filmList" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 px-6 max-w-6xl mx-auto">
        {films.length > 0 ? (
            films.map((film) => (
                <FilmCard {...film} />
            ))
        ) : (
            <p class="text-center text-gray-400">Aucun film disponible.</p>
        )}
    </div>
</section>

<section class="max-w-4xl mx-auto p-6 bg-[#312345] rounded-lg shadow-lg text-white mt-10">
    <h1 class="text-3xl font-bold text-center mb-6">üé¨ Ajouter un Film</h1>

    <form id="filmForm" class="space-y-4">
        <div>
            <label class="block text-gray-300">Titre du film</label>
            <input type="text" id="titre_film" required class="w-full p-2 rounded bg-gray-800 text-white" />
        </div>

        <div class="grid grid-cols-2 gap-4">
            <div>
                <label class="block text-gray-300">Date de sortie</label>
                <input type="date" id="sortie" required class="w-full p-2 rounded bg-gray-800 text-white" />
            </div>
            <div>
                <label class="block text-gray-300">R√©alisateur</label>
                <input type="text" id="realisateur" required class="w-full p-2 rounded bg-gray-800 text-white" />
            </div>
        </div>

        <div class="grid grid-cols-2 gap-4">
            <div>
                <label class="block text-gray-300">Dur√©e (min)</label>
                <input type="number" id="duree" required class="w-full p-2 rounded bg-gray-800 text-white" />
            </div>
            <div>
                <label class="block text-gray-300">Genre</label>
                <input type="text" id="genre" required class="w-full p-2 rounded bg-gray-800 text-white" />
            </div>
        </div>

        <div>
            <label class="block text-gray-300">Synopsis</label>
            <textarea id="synopsis" required class="w-full p-2 rounded bg-gray-800 text-white"></textarea>
        </div>

        <div>
            <label class="block text-gray-300">Bande-Annonce (YouTube URL)</label>
            <input type="text" id="ba" class="w-full p-2 rounded bg-gray-800 text-white" />
        </div>

        <div>
            <label class="block text-gray-300">Affiche du film</label>
            <input type="file" id="affiche" accept="image/*" class="w-full p-2 rounded bg-gray-800 text-white" />
        </div>

        <!-- ‚úÖ Boutons -->
        <div class="flex justify-between">
            <button type="button" onclick="closeModal()" class="bg-gray-600 px-4 py-2 rounded-lg text-white">Annuler</button>
            <button type="submit" class="bg-[#ff4e78] hover:bg-[#e03e68] px-4 py-2 rounded-lg text-white font-bold">Ajouter</button>
        </div>
    </form>
</section>


<!-- JavaScript pour filtrer les films -->
<script>
    document.getElementById("genreFilter").addEventListener("change", function() {
        const selectedGenre = this.value;
        const filmCards = document.querySelectorAll("#filmList > a");

        filmCards.forEach((card) => {
            const genres = card.getAttribute("data-genres").split(",");
            card.style.display = selectedGenre === "" || genres.includes(selectedGenre) ? "block" : "none";
        });
    });


    document.getElementById("filmForm").addEventListener("submit", async (event) => {
    event.preventDefault();

    const formData = new FormData();
    formData.append("titre_film", document.getElementById("titre_film").value);
    formData.append("sortie", document.getElementById("sortie").value);
    formData.append("realisateur", document.getElementById("realisateur").value);
    formData.append("duree", document.getElementById("duree").value);
    formData.append("genre", document.getElementById("genre").value);
    formData.append("synopsis", document.getElementById("synopsis").value);
    formData.append("ba", document.getElementById("ba").value);

    const affiche = document.getElementById("affiche").files[0];
    if (affiche) {
        formData.append("affiche", affiche);
    }

    // ‚úÖ V√©rification avant l‚Äôenvoi
    console.log("üîç Donn√©es envoy√©es :", Object.fromEntries(formData.entries()));

    try {
        const response = await fetch("/api/addFilm", {
            method: "POST",
            body: formData,
        });

        const result = await response.json();
        console.log("üìå R√©ponse serveur :", result);

        if (response.ok) {
            alert("üé¨ Film ajout√© avec succ√®s !");
            location.reload();
        } else {
            throw new Error(result.error || "Erreur lors de l'ajout du film");
        }
    } catch (error) {
        console.error("‚ùå Erreur :", error);
        alert("‚ùå Erreur : " + error.message);
    }
});

</script>
</Layout>
