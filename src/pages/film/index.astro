---
import { allFilms } from "../../../backend.mjs";
import FilmCard from "../../components/FilmCard.astro";
import Layout from '../../layouts/Layout.astro';
import '../../styles/global.css'
import { Image } from 'astro:assets';
import titre from "../assets/img/film.webp";;
import { addFilm } from "../../../backend.mjs";


const films = await allFilms();
const uniqueGenres = [...new Set(films.flatMap((film) => film.genre))];
---

<Layout>


<!-- ‚úÖ Bouton pour ouvrir la modale -->
<button id="openModal" class="px-4 py-2 bg-blue-500 text-white font-bold rounded-lg">
    ‚ûï Ajouter un Film
</button>

<section class="py-12 bg-[#190A35] text-white">
    <h1 class="text-center text-4xl font-bold mb-10">Tous les Films</h1>

    <!-- Barre de filtrage -->
    <div class="flex justify-center mb-6">
        <label for="genreFilter" class="sr-only">Filtrer par Genre</label>
        <select id="genreFilter" class="p-3 rounded bg-gray-800 text-white">
            <option value="">Tous les genres</option>
            {uniqueGenres.map((genre) => (
                <option value={genre}>{genre}</option>
            ))}
        </select>
    </div>

    <!-- Grille des films -->
    <div id="filmList" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 px-6 max-w-6xl mx-auto">
        {films.length > 0 ? (
            films.map((film) => (
                <FilmCard {...film} />
            ))
        ) : (
            <p class="text-center text-gray-400">Aucun film disponible.</p>
        )}
    </div>
</section>



<!-- ‚úÖ Modale cach√©e par d√©faut -->
<div id="filmModal" class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center hidden">
    <div class="bg-[#312345] p-6 rounded-lg shadow-lg max-w-md w-full">
        <h2 class="text-xl font-bold text-white text-center mb-4">üé¨ Ajouter un Film</h2>

        <!-- Formulaire d'ajout -->
        <form id="filmForm" class="space-y-3">
            <label class="text-white">Titre du film :</label>
            <input type="text" id="titre_film" class="w-full p-2 rounded bg-gray-800 text-white" required />

            <label class="text-white">Date de sortie :</label>
            <input type="date" id="sortie" class="w-full p-2 rounded bg-gray-800 text-white" required />

            <label class="text-white">Dur√©e (min) :</label>
            <input type="number" id="duree" class="w-full p-2 rounded bg-gray-800 text-white" required />

            <label class="text-white">R√©alisateur :</label>
            <input type="text" id="realisateur" class="w-full p-2 rounded bg-gray-800 text-white" required />

            <label class="text-white">Synopsis :</label>
            <textarea id="synopsis" class="w-full p-2 rounded bg-gray-800 text-white" required></textarea>

            <label class="text-white">Bande-Annonce (YouTube URL) :</label>
            <input type="url" id="ba" class="w-full p-2 rounded bg-gray-800 text-white" />

            <label class="text-white">Affiche du film :</label>
            <input type="file" id="affiche" class="w-full p-2 bg-gray-800 text-white rounded" accept="image/*" />

            <!-- Boutons -->
            <div class="flex justify-between">
                <button type="button" id="closeModal" class="px-4 py-2 bg-red-500 text-white font-bold rounded-lg">‚ùå Annuler</button>
                <button type="submit" class="px-4 py-2 bg-green-500 text-white font-bold rounded-lg">‚úÖ Ajouter</button>
            </div>
        </form>
    </div>
</div>

<!-- JavaScript pour filtrer les films -->
<script>
    document.getElementById("genreFilter").addEventListener("change", function() {
        const selectedGenre = this.value;
        const filmCards = document.querySelectorAll("#filmList > a");

        filmCards.forEach((card) => {
            const genres = card.getAttribute("data-genres").split(",");
            card.style.display = selectedGenre === "" || genres.includes(selectedGenre) ? "block" : "none";
        });
    });


    function validateForm(data) {
    if (!data.titre_film || data.titre_film.length < 2) {
        alert("‚ùå Le titre du film est trop court !");
        return false;
    }

    if (!data.sortie.match(/^\d{4}-\d{2}-\d{2}$/)) {
        alert("‚ùå Format de la date incorrect (ex : 2025-02-14)");
        return false;
    }

    if (isNaN(data.duree) || data.duree <= 0) {
        alert("‚ùå La dur√©e doit √™tre un nombre valide !");
        return false;
    }

    if (data.ba && !data.ba.match(/^https:\/\/www\.youtube\.com\/watch\?v=.+/)) {
        alert("‚ùå Lien YouTube invalide !");
        return false;
    }

    return true; // ‚úÖ Tout est bon !
}

document.getElementById("openModal").addEventListener("click", () => {
    document.getElementById("filmModal").classList.remove("hidden");
});

document.getElementById("closeModal").addEventListener("click", () => {
    document.getElementById("filmModal").classList.add("hidden");
});

document.getElementById("filmForm").addEventListener("submit", async (e) => {
    e.preventDefault();

    const formData = new FormData();
    formData.append("titre_film", document.getElementById("titre_film").value);
    formData.append("sortie", document.getElementById("sortie").value);
    formData.append("duree", document.getElementById("duree").value);
    formData.append("realisateur", document.getElementById("realisateur").value);
    formData.append("synopsis", document.getElementById("synopsis").value);
    formData.append("ba", document.getElementById("ba").value);
    formData.append("affiche", document.getElementById("affiche").files[0]);

    try {
        const response = await fetch("/api/ajouter-film", {
            method: "POST",
            body: formData
        });

        if (!response.ok) throw new Error("Erreur lors de l'ajout du film");

        alert("‚úÖ Film ajout√© avec succ√®s !");
        document.getElementById("filmModal").classList.add("hidden");
    } catch (error) {
        console.error(error);
        alert(error.message);
    }
});


</script>
</Layout>
